# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-06-15 18:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.components.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Título')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('create_date', models.DateField(blank=True, null=True, verbose_name='Create Date')),
                ('closed_date', models.DateField(blank=True, null=True, verbose_name='Closed Date')),
                ('source', models.CharField(blank=True, max_length=100, null=True, verbose_name='Código-fonte')),
                ('line', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome')),
                ('reference', models.CharField(max_length=100)),
                ('estimated_time', models.IntegerField(blank=True, null=True, verbose_name='Tempo Estimado')),
                ('spent_time', models.IntegerField(blank=True, null=True, verbose_name='Tempo Gasto')),
                ('estimated_storypoints', models.IntegerField(blank=True, null=True, verbose_name='Pontos Estimados')),
                ('realized_storypoints', models.IntegerField(blank=True, null=True, verbose_name='Realized Points')),
                ('estimated_businnesvalue', models.IntegerField(blank=True, null=True, verbose_name='Valor de Negócio Estimado')),
                ('realized_businnesvalue', models.IntegerField(blank=True, null=True, verbose_name='Valor de Negócio Gasto')),
                ('file', models.FileField(upload_to='upload', verbose_name='Arquivo')),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('level', models.IntegerField(choices=[(0, 'Projeto'), (1, 'Requisitos'), (2, 'Sprint'), (3, 'Estória de Usuário')], verbose_name='Nível')),
                ('type', models.IntegerField(choices=[(0, 'Arquivo'), (1, 'Código-fonte'), (2, 'Atividade')], verbose_name='Tipo')),
                ('trace_code', models.CharField(max_length=100, verbose_name='Código de Rastreio')),
            ],
            bases=(models.Model, main.components.models.MyModel),
        ),
        migrations.CreateModel(
            name='HistoricalRequeriment',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Código')),
                ('title', models.CharField(max_length=100, verbose_name='Título')),
                ('description', models.TextField()),
                ('type', models.IntegerField(choices=[(0, 'Funcional'), (1, 'Não funcional')], verbose_name='Tipo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical requeriment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSprint',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Título')),
                ('reference', models.IntegerField(blank=True, null=True, verbose_name='ID da ferramenta de gerenciamento de projetos')),
                ('status', models.IntegerField(choices=[(0, 'Planejando'), (1, 'Executando'), (2, 'Fechado')], verbose_name='Status')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='Início')),
                ('end', models.DateField(blank=True, null=True, verbose_name='Fim')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Sprint',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSprintUserStory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Estória não completa'), (1, 'Estória completa')], default=0, verbose_name='Status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sprint user story',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserStory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code', models.CharField(max_length=30, verbose_name='Código')),
                ('reference', models.IntegerField(blank=True, null=True, verbose_name='ID da ferramenta de gerenciamento de projetos')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('acceptanceCriteria', models.TextField(blank=True, null=True, verbose_name='Critérios de Aceitação')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user story',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('requester', models.CharField(max_length=100, verbose_name='Solicitante')),
                ('description', models.TextField()),
                ('points_type', models.IntegerField(choices=[(0, 'Pontos de Função'), (1, 'Pontos de Estória de Usuário'), (2, 'Pontos de Caso de Uso')], verbose_name='Tipos de Pontos')),
                ('total_points', models.IntegerField(verbose_name='Total de pontos planejados')),
                ('repository_type', models.CharField(blank=True, choices=[('Git', 'Git')], max_length=30, null=True, verbose_name='Tipo de Repositório')),
                ('repository_url', models.CharField(blank=True, max_length=200, null=True, verbose_name='URL do Repositório')),
                ('tracking_tool_type', models.CharField(blank=True, choices=[('Internal', 'Internal'), ('Redmine', 'Redmine')], max_length=50, null=True, verbose_name='Tipo de Ferramenta de Gerenciamento')),
                ('tracking_sp_planned_variable', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do campo personalizado dos pontos planejados')),
                ('tracking_sp_realized_variable', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do campo personalizado dos pontos gastos')),
                ('tracking_bv_planned_variable', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do campo personalizado dos pontos de valor de negócio planejados')),
                ('tracking_bv_realized_variable', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do campo personalizado dos valor de negócio de usuário gastos')),
                ('tracking_tool_url', models.URLField(blank=True, null=True, verbose_name='URL da ferramenta de gerencimento de projetos')),
                ('tracking_tool_user', models.CharField(blank=True, max_length=30, null=True, verbose_name='Usuário da ferramenta de gerenciamento de projetos')),
                ('tracking_tool_password', models.CharField(blank=True, max_length=30, null=True, verbose_name='Senha da ferramenta de gerenciamento de projetos')),
                ('tracking_tool_project_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='Id do projeto na ferramenta de gerenciamento de projetos')),
                ('versionAsSprint', models.BooleanField(default=False, verbose_name='Importar versões do Redmine como Sprints?')),
                ('issueTypesAsUserStory', models.IntegerField(blank=True, null=True, verbose_name='O tipo de tarefa do redmine é uma história do usuário (Insira o ID do tipo de problema do redmine)')),
                ('issueStatusClosed', models.IntegerField(blank=True, null=True, verbose_name='Qual é a situação da tarefa do redmine é uma história de usuário completa? (Insira o ID da situação da tarefa do redmine)')),
                ('issueOnInsertUserStory', models.IntegerField(blank=True, null=True, verbose_name='Inserir uma tarefa no redmine quando salvar uma nova Estória de Usuário?(Informe o ID do tipo de tarefa)')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
                'ordering': ['-id'],
            },
            bases=(models.Model, main.components.models.MyModel),
        ),
        migrations.CreateModel(
            name='Requeriment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Código')),
                ('title', models.CharField(max_length=100, verbose_name='Título')),
                ('description', models.TextField()),
                ('type', models.IntegerField(choices=[(0, 'Funcional'), (1, 'Não funcional')], verbose_name='Tipo')),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('depends_on', models.ManyToManyField(blank=True, to='main.Requeriment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Project', verbose_name='Projeto')),
            ],
            bases=(models.Model, main.components.models.MyModel),
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Título')),
                ('reference', models.IntegerField(blank=True, null=True, verbose_name='ID da ferramenta de gerenciamento de projetos')),
                ('status', models.IntegerField(choices=[(0, 'Planejando'), (1, 'Executando'), (2, 'Fechado')], verbose_name='Status')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='Início')),
                ('end', models.DateField(blank=True, null=True, verbose_name='Fim')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Project', verbose_name='Projeto')),
            ],
            options={
                'verbose_name': 'Sprint',
                'verbose_name_plural': 'Sprints',
                'ordering': ['-id'],
            },
            bases=(models.Model, main.components.models.MyModel),
        ),
        migrations.CreateModel(
            name='SprintUserStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Estória não completa'), (1, 'Estória completa')], default=0, verbose_name='Status')),
                ('sprint', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Sprint', verbose_name='Sprint')),
            ],
            bases=(models.Model, main.components.models.MyModel),
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, verbose_name='Código')),
                ('reference', models.IntegerField(blank=True, null=True, verbose_name='ID da ferramenta de gerenciamento de projetos')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('acceptanceCriteria', models.TextField(blank=True, null=True, verbose_name='Critérios de Aceitação')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Project', verbose_name='Projeto')),
                ('requeriment', models.ManyToManyField(to='main.Requeriment')),
            ],
            options={
                'ordering': ['code'],
            },
            bases=(models.Model, main.components.models.MyModel),
        ),
        migrations.AddField(
            model_name='sprintuserstory',
            name='userstory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.UserStory', verbose_name='Estória de Usuário'),
        ),
        migrations.AddField(
            model_name='historicaluserstory',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Project'),
        ),
        migrations.AddField(
            model_name='historicalsprintuserstory',
            name='sprint',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Sprint'),
        ),
        migrations.AddField(
            model_name='historicalsprintuserstory',
            name='userstory',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.UserStory'),
        ),
        migrations.AddField(
            model_name='historicalsprint',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Project'),
        ),
        migrations.AddField(
            model_name='historicalrequeriment',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Project'),
        ),
        migrations.AddField(
            model_name='artifacttype',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Project'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Project'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='requeriment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Requeriment'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='sprint',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Sprint'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.ArtifactType', verbose_name='Tipo de Artefato'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artifact',
            name='userstory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.UserStory'),
        ),
    ]
